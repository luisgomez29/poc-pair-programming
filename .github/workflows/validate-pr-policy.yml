name: Validate Pull Request Policy

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  validate-policy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Validate PR requirements
        uses: actions/github-script@v8
        with:
          script: |
            const pr = context.payload.pull_request;

            if (!pr.body) {
              core.setFailed("❌ The pull request body is empty.");
              return;
            }

            const issueMatch = pr.body.match(/(Closes|Fixes) #?(\d+)/i);
            if (!issueMatch) {
              core.setFailed("❌ The pull request does not reference any issue.");
              return;
            }

            const issueNumber = issueMatch[2];
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber
            });

            const hasPPLabel = issue.data.labels.some(label => label.name === 'PP');
            if (!hasPPLabel) return;

            const prAssignees = pr.assignees || [];
            if (prAssignees.length < 2) {
              core.setFailed("❌ The PR with 'PP' label must have at least two assignees.");
              return;
            }

            const prAuthor = pr.user.login;
            const pairAssignees = prAssignees.filter(a => a.login !== prAuthor);
            if (pairAssignees.length === 0) {
              core.setFailed("❌ No pair assignee found (must be different from PR author).");
              return;
            }

            const reviews = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number
            });

            const approvedByPair = reviews.data.some(review =>
              review.state === 'APPROVED' &&
              pairAssignees.some(a => a.login === review.user.login)
            );

            if (!approvedByPair) {
              core.setFailed("❌ The pair assignee must approve the PR.");
            }
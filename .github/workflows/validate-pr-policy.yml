name: Validate Pull Request Policy

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  validate-policy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Validate PR requirements
        uses: actions/github-script@v8
        with:
          script: |
            const pr = context.payload.pull_request;

            // Validar que el cuerpo del PR existe
            if (!pr.body) {
              core.setFailed("‚ùå The pull request body is empty.");
              return;
            }

            const issueMatch = pr.body.match(/(Closes|Fixes) #?(\d+)/i);
            if (!issueMatch) {
              core.setFailed("‚ùå The pull request does not reference any issue.");
              return;
            }

            const issueNumber = issueMatch[2];
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber
            });
            
            const issueAssigneesCount = issue.data.assignees.length;
            console.log(`‚ÑπÔ∏è Issue #${issueNumber} has ${issueAssigneesCount} assignee(s).`);

            issueAssignees.forEach(assignee => {
              console.log(`üë§ Assignee: ${assignee.login}`);
            });

            const hasPPLabel = issue.data.labels.some(label => label.name === 'PP');
            if (!hasPPLabel) return;

            if (!pr.assignees || pr.assignees.length < 2) {
              core.setFailed("‚ùå Pull requests related to 'PP' issues must have at least two assignees.");
              return;
            }

            const reviews = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number
            });

            const approvedByAssignee = reviews.data.some(review =>
              review.state === 'APPROVED' &&
              pr.assignees.some(a => a.login === review.user.login)
            );

            if (!approvedByAssignee) {
              core.setFailed("‚ùå At least one of the assignees must approve the pull request.");
            }
